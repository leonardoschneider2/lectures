{"ast":null,"code":"var _jsxFileName = \"/home/leo_schneider/Documentos/dev/trybe/lectures/exercise-two/src/components/Selector.js\";\nimport React from 'react';\nimport RedditContext from '../context/RedditContext';\n\nclass Selector extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(RedditContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, _ref => {\n      let {\n        selectedSubreddit,\n        availableSubreddits,\n        selectSubreddit\n      } = _ref;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, `Selected: ${selectedSubreddit}`), /*#__PURE__*/React.createElement(\"select\", {\n        onChange: e => selectSubreddit(e.target.value),\n        value: selectedSubreddit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }\n      }, availableSubreddits.map(option => /*#__PURE__*/React.createElement(\"option\", {\n        value: option,\n        key: option,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, option))));\n    });\n  }\n\n}\n\nexport default Selector;","map":{"version":3,"names":["React","RedditContext","Selector","Component","render","selectedSubreddit","availableSubreddits","selectSubreddit","e","target","value","map","option"],"sources":["/home/leo_schneider/Documentos/dev/trybe/lectures/exercise-two/src/components/Selector.js"],"sourcesContent":["import React from 'react';\n\nimport RedditContext from '../context/RedditContext';\n\nclass Selector extends React.Component {\n  render() {\n    return (\n      <RedditContext.Consumer>\n        {({ selectedSubreddit, availableSubreddits, selectSubreddit }) => (\n          <div>\n            <h1>{`Selected: ${selectedSubreddit}`}</h1>\n            <select\n              onChange={ (e) => selectSubreddit(e.target.value) }\n              value={ selectedSubreddit }\n            >\n              {availableSubreddits.map((option) => (\n                <option\n                  value={ option }\n                  key={ option }\n                >\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </RedditContext.Consumer>\n    );\n  }\n}\n\nexport default Selector;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;EACrCC,MAAM,GAAG;IACP,oBACE,oBAAC,aAAD,CAAe,QAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACG;MAAA,IAAC;QAAEC,iBAAF;QAAqBC,mBAArB;QAA0CC;MAA1C,CAAD;MAAA,oBACC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAM,aAAYF,iBAAkB,EAApC,CADF,eAEE;QACE,QAAQ,EAAIG,CAAD,IAAOD,eAAe,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CADnC;QAEE,KAAK,EAAGL,iBAFV;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAIGC,mBAAmB,CAACK,GAApB,CAAyBC,MAAD,iBACvB;QACE,KAAK,EAAGA,MADV;QAEE,GAAG,EAAGA,MAFR;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAIGA,MAJH,CADD,CAJH,CAFF,CADD;IAAA,CADH,CADF;EAsBD;;AAxBoC;;AA2BvC,eAAeV,QAAf"},"metadata":{},"sourceType":"module"}