{"ast":null,"code":"var _jsxFileName = \"/home/leo_schneider/Documentos/dev/trybe/lectures/exercise-two/src/AppCopy.js\";\nimport React, { useContext, useEffect } from 'react';\nimport Posts from './components/Posts';\nimport Selector from './components/Selector';\nimport RedditContext from './context/RedditContext';\n\nfunction App() {\n  const {\n    selectedSubreddit,\n    postsBySubreddit,\n    isFetching,\n    fetchPosts\n  } = useContext(RedditContext);\n  useEffect(() => {\n    const callFetch = () => {\n      const {\n        fetchPosts\n      } = useContext(RedditContext);\n      fetchPosts();\n    };\n\n    callFetch();\n  }, []);\n  const {\n    lastUpdated,\n    items: posts = []\n  } = postsBySubreddit[selectedSubreddit];\n  const isEmpty = posts.length === 0;\n\n  if (isFetching) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, lastUpdated && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, `Last updated at ${new Date(lastUpdated).toLocaleTimeString()}.`), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: fetchPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Refresh\")), isEmpty ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, \"Empty.\") : /*#__PURE__*/React.createElement(Posts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","useContext","useEffect","Posts","Selector","RedditContext","App","selectedSubreddit","postsBySubreddit","isFetching","fetchPosts","callFetch","lastUpdated","items","posts","isEmpty","length","Date","toLocaleTimeString"],"sources":["/home/leo_schneider/Documentos/dev/trybe/lectures/exercise-two/src/AppCopy.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\n\nimport Posts from './components/Posts';\nimport Selector from './components/Selector';\nimport RedditContext from './context/RedditContext';\n\nfunction App() {\n  const { selectedSubreddit, postsBySubreddit, isFetching, fetchPosts } = useContext(RedditContext);\n  useEffect(() => {\n    const callFetch = () => {\n      const { fetchPosts } = useContext(RedditContext);\n      fetchPosts();\n    }\n    callFetch();\n  }, []);\n  const { lastUpdated, items: posts = [] } = postsBySubreddit[selectedSubreddit];\n  const isEmpty = (posts.length === 0);\n  if (isFetching) {\n    return (<h2>Loading...</h2>);\n  }\n  return (\n    <div>\n      <Selector />\n      <div>\n        { lastUpdated && (\n          <span>\n            { `Last updated at ${new Date(lastUpdated).toLocaleTimeString()}.` }\n          </span>\n        ) }\n\n        <button\n          type=\"button\"\n          onClick={ fetchPosts }\n        >\n          Refresh\n        </button>\n      </div>\n      { isEmpty ? <h2>Empty.</h2> : <Posts /> }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM;IAAEC,iBAAF;IAAqBC,gBAArB;IAAuCC,UAAvC;IAAmDC;EAAnD,IAAkET,UAAU,CAACI,aAAD,CAAlF;EACAH,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAM;MACtB,MAAM;QAAED;MAAF,IAAiBT,UAAU,CAACI,aAAD,CAAjC;MACAK,UAAU;IACX,CAHD;;IAIAC,SAAS;EACV,CANQ,EAMN,EANM,CAAT;EAOA,MAAM;IAAEC,WAAF;IAAeC,KAAK,EAAEC,KAAK,GAAG;EAA9B,IAAqCN,gBAAgB,CAACD,iBAAD,CAA3D;EACA,MAAMQ,OAAO,GAAID,KAAK,CAACE,MAAN,KAAiB,CAAlC;;EACA,IAAIP,UAAJ,EAAgB;IACd,oBAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAAR;EACD;;EACD,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACIG,WAAW,iBACX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACK,mBAAkB,IAAIK,IAAJ,CAASL,WAAT,EAAsBM,kBAAtB,EAA2C,GADlE,CAFJ,eAOE;IACE,IAAI,EAAC,QADP;IAEE,OAAO,EAAGR,UAFZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAPF,CAFF,EAgBIK,OAAO,gBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAH,gBAAqB,oBAAC,KAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAhBhC,CADF;AAoBD;;AAED,eAAeT,GAAf"},"metadata":{},"sourceType":"module"}