{"ast":null,"code":"var _jsxFileName = \"/home/leo_schneider/Documentos/trybe/exercise-forms-redux/src/pages/PersonalForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { addPersonalData } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      address: '',\n      city: '',\n      uf: ''\n    };\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      cpf,\n      address,\n      city,\n      uf\n    } = this.state;\n    const person = {\n      name,\n      email,\n      cpf,\n      address,\n      city,\n      uf\n    };\n    const {\n      personalDispatch\n    } = this.props;\n    const ufList = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Nome: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: name,\n        name: \"name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Email: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: email,\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Cpf: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: cpf,\n        name: \"cpf\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Endere\\xE7o: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: address,\n        name: \"address\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Cidade: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"city\",\n        value: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultOption: \"Selecione\",\n        onChange: this.handleChange,\n        value: uf,\n        label: \"Estado: \",\n        id: \"uf\",\n        name: \"uf\",\n        options: ufList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Enviar\",\n        onClick: () => personalDispatch(person)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  personalDispatch: person => dispatch(addPersonalData(person))\n});\n\nPersonalForm.propTypes = {\n  personalDispatch: PropTypes.func\n}.isRequired;\nexport default connect(null, mapDispatchToProps)(PersonalForm);","map":{"version":3,"sources":["/home/leo_schneider/Documentos/trybe/exercise-forms-redux/src/pages/PersonalForm.jsx"],"names":["React","Component","PropTypes","connect","Input","Button","Select","addPersonalData","PersonalForm","constructor","handleChange","target","name","value","setState","state","email","cpf","address","city","uf","render","person","personalDispatch","props","ufList","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { addPersonalData } from '../redux/actions';\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n    this.state = ({\n      name: '',\n      email: '',\n      cpf: '',\n      address: '',\n      city: '',\n      uf: '',\n    });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { name, email, cpf, address, city, uf } = this.state;\n    const person = { name, email, cpf, address, city, uf };\n    const { personalDispatch } = this.props;\n    const ufList = [\n      'Rio de Janeiro',\n      'Minas Gerais',\n      'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return (\n      <fieldset>\n        <Input\n          label=\"Nome: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ name }\n          name=\"name\"\n          required\n        />\n        <Input\n          label=\"Email: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ email }\n          name=\"email\"\n          required\n        />\n        <Input\n          label=\"Cpf: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ cpf }\n          name=\"cpf\"\n          required\n        />\n        <Input\n          label=\"Endereço: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ address }\n          name=\"address\"\n          required\n        />\n        <Input\n          label=\"Cidade: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          name=\"city\"\n          value={ city }\n        />\n        <Select\n          defaultOption=\"Selecione\"\n          onChange={ this.handleChange }\n          value={ uf }\n          label=\"Estado: \"\n          id=\"uf\"\n          name=\"uf\"\n          options={ ufList }\n        />\n        <Button\n          type=\"button\"\n          label=\"Enviar\"\n          onClick={ () => personalDispatch(person) }\n        />\n      </fieldset>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  personalDispatch: (person) => dispatch(addPersonalData(person)),\n});\n\nPersonalForm.propTypes = {\n  personalDispatch: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(PersonalForm);\n"]},"metadata":{},"sourceType":"module"}