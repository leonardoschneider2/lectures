{"ast":null,"code":"var _jsxFileName = \"/home/leo_schneider/Documentos/trybe/exercise-forms-redux/src/pages/PersonalForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonalForm extends Component {\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const {\n      personalData\n    } = this.props;\n    const {\n      name,\n      email,\n      cpf,\n      address,\n      city,\n      uf\n    } = personalData;\n    const ufList = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Nome: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: name,\n        name: \"name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Email: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: email,\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Cpf: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: cpf,\n        name: \"cpf\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Endere\\xE7o: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: address,\n        name: \"address\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Cidade: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"city\",\n        value: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultOption: \"Selecione\",\n        onChange: this.handleChange,\n        value: uf,\n        label: \"Estado: \",\n        id: \"uf\",\n        name: \"uf\",\n        options: ufList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Enviar\",\n        onClick: () => console.log('Ao clicar, envie a informação do formulário')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  personalData: store.personalData.state\n});\n\nPersonalForm.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  cpf: PropTypes.string,\n  address: PropTypes.string,\n  city: PropTypes.string,\n  uf: PropTypes.string\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalForm);","map":{"version":3,"sources":["/home/leo_schneider/Documentos/trybe/exercise-forms-redux/src/pages/PersonalForm.jsx"],"names":["React","Component","connect","PropTypes","Input","Button","Select","PersonalForm","handleChange","target","name","value","setState","render","personalData","props","email","cpf","address","city","uf","ufList","console","log","mapStateToProps","store","state","propTypes","string","isRequired","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\n\nclass PersonalForm extends Component {\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { personalData } = this.props;\n    const { name, email, cpf, address, city, uf } = personalData;\n    const ufList = [\n      'Rio de Janeiro',\n      'Minas Gerais',\n      'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return (\n      <fieldset>\n        <Input\n          label=\"Nome: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ name }\n          name=\"name\"\n          required\n        />\n        <Input\n          label=\"Email: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ email }\n          name=\"email\"\n          required\n        />\n        <Input\n          label=\"Cpf: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ cpf }\n          name=\"cpf\"\n          required\n        />\n        <Input\n          label=\"Endereço: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ address }\n          name=\"address\"\n          required\n        />\n        <Input\n          label=\"Cidade: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          name=\"city\"\n          value={ city }\n        />\n        <Select\n          defaultOption=\"Selecione\"\n          onChange={ this.handleChange }\n          value={ uf }\n          label=\"Estado: \"\n          id=\"uf\"\n          name=\"uf\"\n          options={ ufList }\n        />\n        <Button\n          type=\"button\"\n          label=\"Enviar\"\n          onClick={ () => console.log('Ao clicar, envie a informação do formulário') }\n        />\n      </fieldset>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  personalData: store.personalData.state,\n});\n\n\nPersonalForm.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  cpf: PropTypes.string,\n  address: PropTypes.string,\n  city: PropTypes.string,\n  uf: PropTypes.string,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalForm);\n"]},"metadata":{},"sourceType":"module"}